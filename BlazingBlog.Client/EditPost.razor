@page "/edit/{PostId:int}"

@inject IBlogRepository blogRepository
@rendermode RenderMode.InteractiveWebAssembly

<EditForm Model="blogPost" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="title" class="form-label">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="blogPost.Title" />
    </div>
    <div>
        <label for="content" class="form-label">Content:</label>
        <InputTextArea id="content" class="form-control" @bind-Value="blogPost.Content" />
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Update</button>
    <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public int PostId { get; set; }

    private BlogPost blogPost = new BlogPost();

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("EditPost component initialized");
        // Load the blog post by PostId here
        // blogPost = await blogPostService.GetPostById(PostId);
        blogPost = await blogRepository.GetPostAsync(PostId);
    }

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("Form submitted successfully");
        // Save the blog post here
        await blogRepository.UpdatePostAsync(blogPost);
    }

    private void CancelEdit(MouseEventArgs e)
    {
        throw new NotImplementedException();
    }
}